{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","keyup","keyPressHandle","event","setState","key","document","addEventListener","this","removeEventListener","className","React","PureComponent","ReactDOM","render","getElementById"],"mappings":"oNAEaA,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAFX,EAaEC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEH,MAAOE,EAAME,OAdjC,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,kBAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,kBAV/C,oBAiBE,WACE,OACE,qBAAKQ,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGF,KAAKR,MAAMC,MAAX,mCAC6BO,KAAKR,MAAMC,MADxC,KAGC,kCAxBZ,GAAyBU,IAAMC,e,MCG/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.0e6f5e3b.chunk.js","sourcesContent":["import React from 'react';\n\nexport class App extends React.PureComponent {\n  state = {\n    keyup: '',\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.keyPressHandle);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.keyPressHandle);\n  }\n\n  keyPressHandle = (event: KeyboardEvent) => {\n    this.setState({ keyup: event.key });\n  };\n\n  render(): React.ReactNode {\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {this.state.keyup ? (\n            `The last pressed key is [${this.state.keyup}]`\n          ) : (\n            'Nothing was pressed yet'\n          )}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}